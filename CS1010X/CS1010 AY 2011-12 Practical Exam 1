Question 1: Which Century?

You are helping primary school pupils understand the concept of century. Implement a function get_century that takes in a year as an integer and returns a line that states which century that year falls in. You may assume that the year entered is always a positive integer.

Please refer to the sample test cases for more information about the returnedd string.

As your output requires an ordinal suffix (“st”, “nd”, “rd”, or “th”), you must provide a function get_ordinal for this purpose (You need to determine its return type and formal parameter(s) yourself). Note that special suffices (“st”, “nd”, “rd”) are given to numbers ending with 1, 2, or 3, except those ending with 11, 12, or 13.

If you do not provide the required functions stated above, marks will be deducted on design.

Ans:

def get_century(year):
    century = (year // 100) + 1
    return f'The year {year} falls in the {get_ordinal(century)} century.'
        
def get_ordinal(century):
    if century == 11:
        return '11th'
    elif century == 12:
        return '12th'
    elif century == 13:
        return '13th'
    elif century % 10 == 1:
        return f'{century}st'
    elif century % 10 == 2:
        return f'{century}nd'
    elif century % 10 == 3:
        return f'{century}rd'
    else:
        return f'{century}th'
        
  
Question 2: Who Are the Winners?

Citizens of Zakadaha hold an annual Gagalafa festival to celebrate the harvest of their prized produce, the well-sought after cocoa beans Kokomoko. A lucky draw is held during the festival. Every participant is given a lucky draw number. Each year, the organizer decides on two non-zero digits, the factor_digit and the must_have_digit. These two digits need not be distinct.

A winning lucky draw number is a number that is a multiple of factor_digit as well as contains the must_have_digit. In this exercise, you are to write a Python program that takes in the following three inputs and returns the number of winners.

The factor_digit, which is a non-zero digit (1 – 9).
The must_have_digit, which is also a non-zero digit (1 – 9).
The number of participants, n. Lucky draw numbers will be numbered from 1 to n inclusively.
You may assume that all inputs are valid.
For example, if factor_digit is 3, must_have_digit is 5, and the number of participants is 100, then the number of winners is 6 (the winning numbers are 15, 45, 51, 54, 57 and 75). Your program is to count the number of winners whose lucky draw number is a multiple of factor_digit as well as contains the must_have_digit.

You can find sample input and return value in the test cases.
Note: You must complete all the given function(s) besides the winners function.

Ans:

# Define helper functions here:
def has_must_have_digit(must_have_digit, number):
    if str(must_have_digit) in str(number):
        return True 
    else:
        return False
    
def has_factor_digit(factor_digit, number):
    if number % factor_digit == 0:
        return True
    else:
        return False
def winners(factor_digit, must_have_digit, num_of_participants):
    winner = 0
    for i in range(0, num_of_participants + 1):
        if has_must_have_digit(must_have_digit, i) == True and has_factor_digit(factor_digit, i) == True:
            winner += 1
        
    return winner

